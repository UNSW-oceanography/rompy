{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# SWAN sensitivity example\n",
    "\n",
    "In this notebook we will load the base config options from yaml file and define\n",
    "different SWAN workspaces for different friction parameters to simulate sensitivity testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "from copy import deepcopy\n",
    "from pathlib import Path\n",
    "import yaml\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Workspace basepath"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "workdir = Path(\"example_sensitivity\")\n",
    "workdir.mkdir(exist_ok=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Instantiate model\n",
    "\n",
    "Use a fully-defined config from yaml to instantiate ModelRun with the runtime parameters\n",
    "and the config definition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Uncoment below to view the contents of the yaml file\n",
    "\n",
    "# !cat example_sensitivity.yml"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SwanConfigComponents(model_type='swanconfig', template='/source/csiro/rompy/rompy/templates/swancomp', checkout='main', cgrid=REGULAR(model_type='regular', spectrum=SPECTRUM(model_type='spectrum', mdc=36, flow=0.04, fhigh=1.0, msc=None, dir1=None, dir2=None), grid=GRIDREGULAR(model_type='gridregular', xp=110.0, yp=-35.2, alp=4.0, xlen=7.5, ylen=12.5, mx=14, my=24, suffix='c')), startup=STARTUP(model_type='startup', project=PROJECT(model_type='project', name='Test declarative', nr='run1', title1='Friction sensitivity testing', title2=None, title3=None), set=SET(model_type='set', level=0.0, nor=None, depmin=0.05, maxmes=None, maxerr=None, grav=None, rho=None, cdcap=None, inrhog=None, hsrerr=None, direction_convention='nautical', pwtail=None, froudmax=None, icewind=None), mode=MODE(model_type='mode', kind='nonstationary', dim='twodimensional'), coordinates=COORDINATES(model_type='coordinates', kind=SPHERICAL(model_type='spherical', projection='ccm'), reapeating=False)), inpgrid=DataInterface(model_type='data_interface', bottom=SwanDataGrid(model_type='data_grid', id='data', source=SourceIntake(model_type='intake', dataset_id='gebco', catalog_uri='../../tests/data/catalog.yaml', kwargs={}), filter=Filter(sort={}, subset={}, crop={}, timenorm={}, rename={}, derived={}), variables=['elevation'], coords=DatasetCoords(t='time', x='lon', y='lat', z='depth'), crop_data=True, buffer=1.0, z1='elevation', z2=None, var=<GridOptions.BOTTOM: 'bottom'>, fac=-1.0), input=[SwanDataGrid(model_type='data_grid', id='data', source=SourceIntake(model_type='intake', dataset_id='era5', catalog_uri='../../tests/data/catalog.yaml', kwargs={}), filter=Filter(sort={'coords': ['latitude']}, subset={}, crop={}, timenorm={}, rename={}, derived={}), variables=['u10', 'v10'], coords=DatasetCoords(t='time', x='longitude', y='latitude', z='depth'), crop_data=True, buffer=2.0, z1='u10', z2='v10', var=<GridOptions.WIND: 'wind'>, fac=1.0)]), boundary=BOUNDSPEC(model_type='boundspec', shapespec=SHAPESPEC(model_type='shapespec', shape=TMA(model_type='tma', gamma=3.3, d=12.0), per_type='peak', dspr_type='degrees'), location=SIDE(model_type='side', side='west', direction='ccw'), data=CONSTANTPAR(model_type='constantpar', hs=2.0, per=12.0, dir=255.0, dd=25.0)), initial=INITIAL(model_type='initial', kind=DEFAULT(model_type='default')), physics=PHYSICS(model_type='physics', gen=GEN3(model_type='gen3', source_terms=KOMEN(model_type='komen', wind_drag='wu', agrow=False, a=None, cds2=2.3e-05, stpm=0.00302)), sswell=None, negatinp=None, wcapping=None, quadrupl=None, breaking=None, friction=FRICTION_JONSWAP(model_type='jonswap', cfjon=0.038), triad=None, vegetation=None, mud=None, sice=None, turbulence=None, bragg=None, limiter=None, obstacle=None, setup=None, diffraction=None, surfbeat=None, scat=None, deactivate=None), prop=PROP(model_type='prop', scheme=BSBT(model_type='bsbt')), numeric=NUMERIC(model_type='numeric', stopc=STOPC(model_type='stopc', dabs=0.05, drel=0.01, curvat=0.05, npnts=99.5, mode=NONSTAT(model_type='nonstat', mxitst=3), limiter=0.1), dirimpl=None, sigimpl=None, ctheta=None, csigma=None, setup=None), output=OUTPUT(model_type='output', frame=None, group=None, curve=None, ray=None, isoline=None, points=POINTS(model_type='points', sname='pts', xp=[114.0, 112.5, 115.0], yp=[-34.0, -26.0, -30.0]), ngrid=None, quantity=QUANTITIES(model_type='quantities', quantities=[QUANTITY(model_type='quantity', output=[<BlockOptions.DEPTH: 'depth'>, <BlockOptions.HSIGN: 'hsign'>, <BlockOptions.TPS: 'tps'>, <BlockOptions.DIR: 'dir'>, <BlockOptions.TM01: 'tm01'>], short=None, long=None, lexp=None, hexp=None, excv=-9.0, power=None, ref=None, fswell=None, noswll=None, fmin=None, fmax=None, coord=None), QUANTITY(model_type='quantity', output=[<BlockOptions.HSWELL: 'hswell'>], short=None, long=None, lexp=None, hexp=None, excv=None, power=None, ref=None, fswell=0.125, noswll=None, fmin=None, fmax=None, coord=None)]), output_options=None, block=BLOCK(model_type='block', sname='COMPGRID', fname='swangrid.nc', times=TimeRangeOpen(model_type='open', tbeg=datetime.datetime(1970, 1, 1, 0, 0), delt=datetime.timedelta(seconds=3600), tfmt=1, dfmt='sec', suffix='blk'), header=None, idla=None, output=[<BlockOptions.DEPTH: 'depth'>, <BlockOptions.HSIGN: 'hsign'>, <BlockOptions.TPS: 'tps'>, <BlockOptions.DIR: 'dir'>], unit=None), table=TABLE(model_type='table', sname='pts', fname='swantable.nc', times=TimeRangeOpen(model_type='open', tbeg=datetime.datetime(1970, 1, 1, 0, 0), delt=datetime.timedelta(seconds=3600), tfmt=1, dfmt='sec', suffix='tbl'), format='noheader', output=[<BlockOptions.HSIGN: 'hsign'>, <BlockOptions.HSWELL: 'hswell'>, <BlockOptions.DIR: 'dir'>, <BlockOptions.TPS: 'tps'>, <BlockOptions.TM01: 'tm01'>, <BlockOptions.WATLEV: 'watlev'>, <BlockOptions.QP: 'qp'>]), specout=None, nestout=None, test=None), lockup=LOCKUP(model_type='lockup', compute=COMPUTE_STAT(model_type='stat', times=NONSTATIONARY(model_type='nonstationary', tbeg=datetime.datetime(1970, 1, 1, 0, 0), delt=datetime.timedelta(seconds=3600), tfmt=1, dfmt='sec', suffix='', tend=datetime.datetime(1970, 1, 2, 0, 0)), hotfile=HOTFILE(model_type='hotfile', fname=PosixPath('hotfile.txt'), format='free'), hottimes=[1, -1], suffix='_%Y%m%dT%H%M%S')))"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from rompy.swan.config import SwanConfigComponents\n",
    "\n",
    "conf_dict = yaml.load(open(\"example_sensitivity.yml\"), Loader=yaml.Loader)\n",
    "config = SwanConfigComponents(**conf_dict)\n",
    "config"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Examine components"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PROJECT name='Test declarative' nr='run1' title1='Friction sensitivity testing'\n"
     ]
    }
   ],
   "source": [
    "# Project\n",
    "\n",
    "print(config.startup.project.render())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "FRICTION JONSWAP CONSTANT cfjon=0.038\n"
     ]
    }
   ],
   "source": [
    "# Friction\n",
    "\n",
    "print(config.physics.friction.render())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Sensitivity config"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def set_experiment(config, cfjon):\n",
    "    \"\"\"Return a new config object for a given experiment\"\"\"\n",
    "    new_config = deepcopy(config)\n",
    "    new_config.startup.project.title2 = f\"Jonswap friction cfjon={cfjon}\"\n",
    "    new_config.physics.friction.cfjon = cfjon\n",
    "    return new_config"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "TimeRange(start=datetime.datetime(2023, 1, 1, 0, 0), end=datetime.datetime(2023, 1, 2, 0, 0), duration=datetime.timedelta(days=1), interval=datetime.timedelta(seconds=3600), include_end=True)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from rompy.core.time import TimeRange\n",
    "\n",
    "period = TimeRange(\n",
    "    start=\"2023-01-01T00:00:00\",\n",
    "    end=\"2023-01-02T00:00:00\",\n",
    "    interval=\"1h\"\n",
    ")\n",
    "\n",
    "period"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "PROJECT name='Test declarative' nr='run1' title1='Friction sensitivity testing' title2='Jonswap friction cfjon=0.01'\n",
      "FRICTION JONSWAP CONSTANT cfjon=0.01\n",
      "\n",
      "PROJECT name='Test declarative' nr='run1' title1='Friction sensitivity testing' title2='Jonswap friction cfjon=0.02'\n",
      "FRICTION JONSWAP CONSTANT cfjon=0.02\n",
      "\n",
      "PROJECT name='Test declarative' nr='run1' title1='Friction sensitivity testing' title2='Jonswap friction cfjon=0.03'\n",
      "FRICTION JONSWAP CONSTANT cfjon=0.03\n",
      "\n",
      "PROJECT name='Test declarative' nr='run1' title1='Friction sensitivity testing' title2='Jonswap friction cfjon=0.04'\n",
      "FRICTION JONSWAP CONSTANT cfjon=0.04\n",
      "\n",
      "PROJECT name='Test declarative' nr='run1' title1='Friction sensitivity testing' title2='Jonswap friction cfjon=0.05'\n",
      "FRICTION JONSWAP CONSTANT cfjon=0.05\n"
     ]
    }
   ],
   "source": [
    "from rompy.model import ModelRun\n",
    "\n",
    "runs = []\n",
    "for cfjon in [0.01, 0.02, 0.03, 0.04, 0.05]:\n",
    "    run_id = f\"cfjon-{cfjon}\"\n",
    "    new_config = set_experiment(config, cfjon=cfjon)\n",
    "\n",
    "    print(f\"\\n{new_config.startup.project.render()}\")\n",
    "    print(f\"{new_config.physics.friction.render()}\")\n",
    "\n",
    "    runs.append(ModelRun(\n",
    "        run_id=run_id,\n",
    "        config=new_config,\n",
    "        period=period,\n",
    "        output_dir=str(workdir)),\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Run the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: cfjon-0.01\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/cfjon-0.01/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/cfjon-0.01/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: cfjon-0.02\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/cfjon-0.02/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/cfjon-0.02/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: cfjon-0.03\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/cfjon-0.03/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/cfjon-0.03/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: cfjon-0.04\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/cfjon-0.04/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/cfjon-0.04/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Model settings:\n",
      "INFO:rompy.model:\n",
      "run_id: cfjon-0.05\n",
      "period: \n",
      "\tStart: 2023-01-01 00:00:00\n",
      "\tEnd: 2023-01-02 00:00:00\n",
      "\tDuration: 1 day, 0:00:00\n",
      "\tInterval: 1:00:00\n",
      "\tInclude End: True\n",
      "\n",
      "output_dir: example_sensitivity\n",
      "config: <class 'rompy.swan.config.SwanConfigComponents'>\n",
      "\n",
      "INFO:rompy.model:-----------------------------------------------------\n",
      "INFO:rompy.model:Generating model input files in example_sensitivity\n",
      "INFO:rompy.swan.data:\tWriting bottom to example_sensitivity/cfjon-0.05/bottom.grd\n",
      "INFO:rompy.swan.data:\tWriting wind to example_sensitivity/cfjon-0.05/wind.grd\n",
      "INFO:rompy.model:\n",
      "INFO:rompy.model:Successfully generated project in example_sensitivity\n",
      "INFO:rompy.model:-----------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "for run in runs:\n",
    "    run()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Check the workspace"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[PosixPath('example_sensitivity/cfjon-0.01'),\n",
       " PosixPath('example_sensitivity/cfjon-0.02'),\n",
       " PosixPath('example_sensitivity/cfjon-0.03'),\n",
       " PosixPath('example_sensitivity/cfjon-0.04'),\n",
       " PosixPath('example_sensitivity/cfjon-0.05')]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted(workdir.glob(\"*\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[PosixPath('example_sensitivity/cfjon-0.03/INPUT'),\n",
       " PosixPath('example_sensitivity/cfjon-0.03/bottom.grd'),\n",
       " PosixPath('example_sensitivity/cfjon-0.03/wind.grd')]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted(Path(\"example_sensitivity/cfjon-0.03\").glob(\"*\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "! Rompy SwanConfig\n",
      "! Template: /source/csiro/rompy/rompy/templates/swancomp\n",
      "! Generated: 2023-10-16 02:11:30.301323 on rafael-XPS by rguedes\n",
      "\n",
      "\n",
      "! Startup -------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "PROJECT name='Test declarative' nr='run1' title1='Friction sensitivity testing' title2='Jonswap friction cfjon=0.03'\n",
      "\n",
      "SET level=0.0 depmin=0.05 NAUTICAL\n",
      "\n",
      "MODE NONSTATIONARY TWODIMENSIONAL\n",
      "\n",
      "COORDINATES SPHERICAL CCM\n",
      "\n",
      "! Computational Grid --------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "\n",
      "CGRID REGULAR xpc=110.0 ypc=-35.2 alpc=4.0 xlenc=7.5 ylenc=12.5 mxc=14 myc=24 CIRCLE mdc=36 flow=0.04 fhigh=1.0\n",
      "\n",
      "! Input Grids ---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "INPGRID BOTTOM REG 109.0 -36.0 0.0 8 14 1.0 1.0 EXC -99.0\n",
      "READINP BOTTOM -1.0 'bottom.grd' 3 FREE\n",
      "\n",
      "INPGRID WIND REG 110.0 -35.0 0.0 1 2 5.0 5.0 EXC -99.0 NONSTATION 20230101.000000 6.0 HR\n",
      "READINP WIND 1.0 'wind.grd' 3 0 1 0 FREE\n",
      "\n",
      "\n",
      "\n",
      "! Boundary and Initial conditions -------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "BOUND SHAPESPEC TMA gamma=3.3 d=12.0 PEAK DSPR DEGREES\n",
      "BOUNDSPEC SIDE WEST CCW CONSTANT PAR hs=2.0 per=12.0 dir=255.0 dd=25.0\n",
      "\n",
      "INITIAL DEFAULT\n",
      "\n",
      "\n",
      "! Physics -------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "GEN3 KOMEN cds2=2.3e-05 stpm=0.00302 DRAG WU\n",
      "\n",
      "FRICTION JONSWAP CONSTANT cfjon=0.03\n",
      "\n",
      "\n",
      "! Numerics ------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "PROP BSBT\n",
      "\n",
      "NUMERIC STOPC dabs=0.05 drel=0.01 curvat=0.05 npnts=99.5 NONSTATIONARY mxitst=3 limiter=0.1\n",
      "\n",
      "\n",
      "! Output --------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "POINTS sname='pts' &\n",
      "    xp=114.0 yp=-34.0 &\n",
      "    xp=112.5 yp=-26.0 &\n",
      "    xp=115.0 yp=-30.0\n",
      "\n",
      "QUANTITY DEPTH HSIGN TPS DIR TM01 excv=-9.0\n",
      "\n",
      "QUANTITY HSWELL fswell=0.125\n",
      "\n",
      "BLOCK sname='COMPGRID' fname='swangrid.nc' &\n",
      "    DEPTH &\n",
      "    HSIGN &\n",
      "    TPS &\n",
      "    DIR &\n",
      "    OUTPUT tbegblk=20230101.000000 deltblk=3600.0 SEC\n",
      "\n",
      "TABLE sname='pts' NOHEADER fname='swantable.nc' &\n",
      "    HSIGN &\n",
      "    HSWELL &\n",
      "    DIR &\n",
      "    TPS &\n",
      "    TM01 &\n",
      "    WATLEV &\n",
      "    QP &\n",
      "    OUTPUT tbegtbl=20230101.000000 delttbl=3600.0 SEC\n",
      "\n",
      "\n",
      "! Lockup --------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
      "\n",
      "COMPUTE STATIONARY time=20230101.000000\n",
      "COMPUTE STATIONARY time=20230101.010000\n",
      "HOTFILE fname='hotfile_20230101T010000.txt' FREE\n",
      "COMPUTE STATIONARY time=20230101.020000\n",
      "COMPUTE STATIONARY time=20230101.030000\n",
      "COMPUTE STATIONARY time=20230101.040000\n",
      "COMPUTE STATIONARY time=20230101.050000\n",
      "COMPUTE STATIONARY time=20230101.060000\n",
      "COMPUTE STATIONARY time=20230101.070000\n",
      "COMPUTE STATIONARY time=20230101.080000\n",
      "COMPUTE STATIONARY time=20230101.090000\n",
      "COMPUTE STATIONARY time=20230101.100000\n",
      "COMPUTE STATIONARY time=20230101.110000\n",
      "COMPUTE STATIONARY time=20230101.120000\n",
      "COMPUTE STATIONARY time=20230101.130000\n",
      "COMPUTE STATIONARY time=20230101.140000\n",
      "COMPUTE STATIONARY time=20230101.150000\n",
      "COMPUTE STATIONARY time=20230101.160000\n",
      "COMPUTE STATIONARY time=20230101.170000\n",
      "COMPUTE STATIONARY time=20230101.180000\n",
      "COMPUTE STATIONARY time=20230101.190000\n",
      "COMPUTE STATIONARY time=20230101.200000\n",
      "COMPUTE STATIONARY time=20230101.210000\n",
      "COMPUTE STATIONARY time=20230101.220000\n",
      "COMPUTE STATIONARY time=20230101.230000\n",
      "COMPUTE STATIONARY time=20230102.000000\n",
      "HOTFILE fname='hotfile_20230102T000000.txt' FREE\n",
      "STOP\n"
     ]
    }
   ],
   "source": [
    "input = Path(\"example_sensitivity/cfjon-0.03/INPUT\")\n",
    "print(input.read_text())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Run the model\n",
    "\n",
    "Todo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot outputs\n",
    "\n",
    "Todo"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "rompy",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
